name: Publish Dry Run
on:
  workflow_dispatch:
    inputs:
      kotlin-version:
        description: 'Override Kotlin version?'
        required: false
        default: ''
        type: string
      kotest-version:
        description: 'Override Kotest version?'
        required: false
        default: ''
        type: string
      ksp-version:
        description: 'Override KSP version? (full version string)?'
        required: false
        default: ''
        type: string
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  build:
    runs-on: macos-latest
    env:
      KOTLIN_VERSION_ENV: ${{ inputs.kotlin-version }}
      KOTEST_VERSION_ENV: ${{ inputs.kotest-version }}
      KSP_VERSION_ENV: ${{ inputs.ksp-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Enable watchOS Device target
        shell: bash
        run: |
          find . -name "build.gradle.kts" -print0 \
            | xargs -0 sed -i.bak -E 's/^\s*\/\/watchosDeviceArm64\(\).*$/    watchosDeviceArm64()/'
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 16.2.0
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Install deps
        run: brew install cairo freetype libffi libjpeg libpng zlib
      - name: Publish to Maven Local
        run: ./gradlew clean publishAllPublicationsToMavenLocal
        env:
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.PUBLISH_SIGNING_KEYID }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.PUBLISH_SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.PUBLISH_SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.PUBLISH_SONATYPE_USER }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.PUBLISH_SONATYPE_PASSWORD }}
  deploy-docs:
    runs-on: macos-latest
    env:
      KOTLIN_VERSION_ENV: ${{ inputs.kotlin-version }}
      KOTEST_VERSION_ENV: ${{ inputs.kotest-version }}
      KSP_VERSION_ENV: ${{ inputs.ksp-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: pip install mkdocs-material==9.5.40
      - run: pip install mkdocs-material[imaging]==9.5.40
      - name: Build Dokka HTML
        run: |
          export DYLD_FALLBACK_LIBRARY_PATH=/opt/homebrew/lib
          ./gradlew mkDocsSite

      - name: List published Maven-local artifacts
        if: success() || failure()        # always run so the table appears even if publish failed
        shell: bash
        run: |
          ART_DIR="${HOME}/.m2/repository/at/asitplus/signum"
          
          # Header
          {
            echo "### Maven-local artifacts for \`at.asitplus.signum\`"
            echo ""
            echo "| Module | Version | File |"
            echo "|--------|---------|------|"
          } >> "$GITHUB_STEP_SUMMARY"
          
          # Abort early if nothing was written
          [[ -d "$ART_DIR" ]] || { echo "| _No artifacts found_ |  |  |" >> "$GITHUB_STEP_SUMMARY"; exit 0; }
          
          # Collect artifacts (jar / klib / aar / pom) and append table rows
          find "$ART_DIR" -type f \( -name "*.jar" -o -name "*.klib" -o -name "*.aar" -o -name "*.pom" \) \
            | sort \
            | while read -r file; do
                rel="${file#${ART_DIR}/}"        # => module/version/filename
                IFS='/' read -r module version filename <<< "$rel"
                echo "| \`$module\` | \`$version\` | \`$filename\` |" >> "$GITHUB_STEP_SUMMARY"
              done
